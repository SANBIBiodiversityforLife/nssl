<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;


function ssp_import_node_presave($node){
	// The first time a node is saved, the system should check to see if it was on the 2010 list before, and flag it accordingly:
	// In fact, it can't just be the first time, because a user can edit a species name whenever
	// First build up an array of family keys mapped to arrays of species names e.g.: 
	// array('Viperidae' => ['Bitis gabonica', 'Bitis inornanata'], 'Gruidaei' => [some more here etc])
	$species = array();
	if (($handle = fopen("http://nssl.sanbi.org.za/sites/default/files/ssp-both-checking-file.csv", "r")) !== FALSE) {
		while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
			if(array_key_exists($data[2], $species)) {
				array_push($species[$data[2]], $data[0]);
			} else {
				$species[$data[2]] = [$data[0]];
			}
		}
	}
	
	// Check the family first to save time, then the species
	if(array_key_exists($node->field_family->value, $species)) {
		$node->field_sensitive_in_2010->value = in_array($node->title->value, $species[$node->field_family->value]);
	}
	
	// Go into the logic of whether it is sensitive or not below
	// Reset the sensitivity each time before we save
	$node->field_sensitivity->value = '';
	$node->field_is_sensitive->value = 0;
			
	// First, species which are not exploited, are managed or have exploitation unknown cannot be sensitive
	// Added good regeneration potential to this list too based on Reuben's feedback
	if($node->field_exploitation_extent->value == 'none' || 
	   $node->field_exploitation_extent->value == 'unknown' ||
	   $node->field_exploitation_extent->value == 'managed' ||
	   $node->field_regeneration_potential->value == 'good') {	
		return;
	}
	
	// Deal with the close relatives separately
	if($node->field_exploitation_extent->value != 'uncertain') {	
		
		// Individuals are permanently removed and killed
		if($node->field_targeted_demographics->value == 'harmful' || $node->field_targeted_demographics->value == 'harmful_immature') {
			
			// It is sensitive if there is a vulnerable population
			if($node->field_population_vulnerability->value == 'vulnerable') { 
				$node->field_sensitivity->value = 'rare';
				$node->field_is_sensitive->value = 1;
			}
			
			// Otherwise, if the exploitation is significant...
			else if($node->field_exploitation_extent->value == 'significant') {
				
				// Check the regeneration potential value, if it's good then flag as sensitive
				if($node->field_regeneration_potential->value == 'poor') {
					$node->field_sensitivity->value = 'exploited';
					$node->field_is_sensitive->value = 1;
				}			
			}
		}
	}
	
	// Utilisation is having a significant effect on a close relative with similar life traits
	else {		
		
		// Double check that the relative is actually a sensitive species
		$relative_nid = $node->field_similar_species->getValue()[0]['target_id'];
		$relative = Node::load($relative_nid);
		// if($relative->field_is_sensitive->value > 0) { I'm taking this out after Tilla's presentation
		if($relative->field_targeted_demographics->value == 'harmful' || $relative->field_targeted_demographics->value == 'harmful_immature') {
			// If the regeneration potential for this species is good this species should not be sensitive
			
			// Does this (the original) species have a vulnerable population AND poor regeneration potential? If so then it's sensitive
			if($node->field_regeneration_potential->value == 'poor' && $node->field_population_vulnerability->value == 'vulnerable') { 
				$node->field_sensitivity->value = 'relative';
				$node->field_is_sensitive->value = 1;
			}
		}	
	}
	
	// As discussed here https://github.com/rukayaj/ssp/issues/43 users with a certain role should trigger a reset back to unpublished status
	$user = \Drupal::currentUser();
	if(!$user->hasPermission('administer nodes')) {
		$node->status = 0;
	}
}